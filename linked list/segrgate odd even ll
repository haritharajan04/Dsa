class Solution {
    public ListNode oddEvenList(ListNode head) {
        if (head == null || head.next == null) return head;

        ListNode odd = head; // First node
        ListNode even = head.next; // Second node
        ListNode evenHead = even; // Save start of even list to attach later

        while (even != null && even.next != null) {
            odd.next = even.next; // Link odd to the next odd node
            odd = odd.next;       // Move odd pointer forward
            even.next = odd.next; // Link even to the next even node
            even = even.next;     // Move even pointer forward
        }

        odd.next = evenHead; // Connect odd list to even list
        return head;
    }
}
